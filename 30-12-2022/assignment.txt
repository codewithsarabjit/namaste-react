Theory

What is NPM?
NPM is a package manager.

Parcel/Webpack?
Parcel or webpack is a zero configuration tool or a node modules package that provides support to optimize the code, minify the code, Tree shaking, image optimization,
compression, code splitting, content hashing. 

what is .parcel-cache?
This is a space allocation to Parcel to provide all the supported activities that parcel is required to perform.

what is npx
NPX means Node package execute. It comes with npm and it is a runner that can execute a node package.

dependencies vs devDependencies?
dependencies are the required packages that an application need to run to support all features of the application.
devDependencies are the packages that are only required in dev environment and does not need to be present in production.

Tree shaking?
Tree shaking is a feature provided by parcel or webpack that statically analyses all the imports and exports of each module and removes the 
unused ones.

Hot Module Replacement (HMR)?
it exchanges, adds or removes modules while an application is running, without a full reload.
it improves the development time significantly.

5 super powers of Parcel?
1. HMR
2. Code minification
3. Caching
4. Tree shaking
5. Code splitting 

Code minification: means parcel automatically minifies the code base while creating a production build.
Code Splitting: means parcel can be configured in a way to support code splitting module or page wise such that only the required code chunk
is called on specific page instead of loading whole codebase on each page.
Caching: parcel caches all the build files already compiled and no same code will be built again.

.gitignore?
gitignore file is a config file for github that tells github which folders or file to ignore while pushing to git repository.
Always add the files in gitignore which you can create on production  and don't need to be pushed via git.

package.json vs package-lock.json?
package.json is the configuration for package managers liek parcel or webpack. These package managers use package.json to see which pacakges 
and their which version need to be installed.
pacakge-lock.json is the copy of configuration file which is created/updated after initial install or subsequent changes to package.json file.
It exactly shows us what exact version of which dependencies is installed into node modules folder and even which transitive dependencies and 
their version is installed in the node modules.

why should not modify package-lock.json?
because it is created by the package manager on run time and all the changes will be overridden eventually.

what is node_modules? is it a good idea to push it to git?
node_modules contains all the installed packages or their transitive dependencies that the package manager has installed while running
install or update commands.
No, node_modules don't need to be pushed to git because they can be easily replicated or generated on production server with use of just 
package.json and also because node_modules are too large in size approximately in GBs.

what is dist folder?
dist folder is created by the pacakge manager while creating a build to keep the build related files.

what is browserslist?
it is a package that comes with the package manager parcel where you can configure which browser or its version the application should 
definitely support. It does this by converting the modern javascript code into pure javascript that is supported by that required version 
of browser.

Read about different bundlers like vite, parcel, webpack.

Read about: ^ - caret and ~ - tilda
~version “Approximately equivalent to version”, will update you to all future patch versions, without incrementing the minor version. 
~1.2.3 will use releases from 1.2.3 to <1.3.0.

^version “Compatible with version”, will update you to all future minor/patch versions, without incrementing the major version. 
^2.3.4 will use releases from 2.3.4 to <3.0.0.

Read about Script types in html (MDN Docs)
This attribute indicates the type of script represented.


npm i parcel and npm install parcel are same thing.

npm install --save-dev parcel and npm install -D parcel are the same thing.

ignite your parcel app:
npx parcel entryfile
npx parcel index.html
