
23rd Dec 2022

● What is Emmet?
    Emmet is a plugin for many popular editors where you can write abbreviations and then this plugin will write the code based on it.

● Difference between a Library and Framework?
    The framework provides the flow of a software application and tells the developer what it needs and calls the code provided by the developer as required. 
    If a library is used, the application calls the code from the library.

● What is CDN? Why do we use it?
    A content delivery network (CDN) refers to a geographically distributed group of servers which work together to provide fast delivery of Internet content. A CDN allows for the quick transfer of assets needed for loading Internet content including HTML pages, javascript files, stylesheets, images, and videos.
    
● Why is React known as React?
    React was developed for applications (Facebook) that have constantly changing data. Since React is a front-end framework or the “View” in MVC, this means that as the user clicks around and changes the app's data, the view should “react” or change with those user events.

● What is crossorigin in script tag?
    The crossorigin attribute sets the mode of the request to an HTTP CORS Request. Web pages often make requests to load resources on other servers. Here is where CORS comes in. A cross-origin request is a request for a resource (e.g. style sheets, iframes, images, fonts, or scripts) from another domain.

● What is diference between React and ReactDOM
    React library is responsible for creating views and ReactDOM library is responsible to actually render UI in the browser.

● What is difference between react.development.js and react.production.js files via CDN?
    The development build is used - as the name suggests - for development reasons. You have Source Maps, debugging and often times hot reloading ability in those builds. The production build, on the other hand, runs in production mode which means this is the code running on your client's machine.

● What is async and defer? 
    In practice, defer is used for scripts that need the whole DOM and/or their relative execution order is important. And async is used for independent scripts, like counters or ads. And their relative execution order does not matter. Page without scripts should be usable.


30th Dec 2022

What is NPM?
NPM is a package manager.

Parcel/Webpack?
Parcel or webpack is a zero configuration tool or a node modules package that provides support to optimize the code, minify the code, Tree shaking, image optimization,
compression, code splitting, content hashing. 

what is .parcel-cache?
This is a space allocation to Parcel to provide all the supported activities that parcel is required to perform.

what is npx
NPX means Node package execute. It comes with npm and it is a runner that can execute a node package.

dependencies vs devDependencies?
dependencies are the required packages that an application need to run to support all features of the application.
devDependencies are the packages that are only required in dev environment and does not need to be present in production.

Tree shaking?
Tree shaking is a feature provided by parcel or webpack that statically analyses all the imports and exports of each module and removes the 
unused ones.

Hot Module Replacement (HMR)?
it exchanges, adds or removes modules while an application is running, without a full reload.
it improves the development time significantly.

5 super powers of Parcel?
1. HMR
2. Code minification
3. Caching
4. Tree shaking
5. Code splitting 

Code minification: means parcel automatically minifies the code base while creating a production build.
Code Splitting: means parcel can be configured in a way to support code splitting module or page wise such that only the required code chunk
is called on specific page instead of loading whole codebase on each page.
Caching: parcel caches all the build files already compiled and no same code will be built again.

.gitignore?
gitignore file is a config file for github that tells github which folders or file to ignore while pushing to git repository.
Always add the files in gitignore which you can create on production  and don't need to be pushed via git.

package.json vs package-lock.json?
package.json is the configuration for package managers liek parcel or webpack. These package managers use package.json to see which pacakges 
and their which version need to be installed.
pacakge-lock.json is the copy of configuration file which is created/updated after initial install or subsequent changes to package.json file.
It exactly shows us what exact version of which dependencies is installed into node modules folder and even which transitive dependencies and 
their version is installed in the node modules.

why should not modify package-lock.json?
because it is created by the package manager on run time and all the changes will be overridden eventually.

what is node_modules? is it a good idea to push it to git?
node_modules contains all the installed packages or their transitive dependencies that the package manager has installed while running
install or update commands.
No, node_modules don't need to be pushed to git because they can be easily replicated or generated on production server with use of just 
package.json and also because node_modules are too large in size approximately in GBs.

what is dist folder?
dist folder is created by the pacakge manager while creating a build to keep the build related files.

what is browserslist?
it is a package that comes with the package manager parcel where you can configure which browser or its version the application should 
definitely support. It does this by converting the modern javascript code into pure javascript that is supported by that required version 
of browser.

Read about different bundlers like vite, parcel, webpack.

Read about: ^ - caret and ~ - tilda
~version “Approximately equivalent to version”, will update you to all future patch versions, without incrementing the minor version. 
~1.2.3 will use releases from 1.2.3 to <1.3.0.

^version “Compatible with version”, will update you to all future minor/patch versions, without incrementing the major version. 
^2.3.4 will use releases from 2.3.4 to <3.0.0.

Read about Script types in html (MDN Docs)
This attribute indicates the type of script represented.


npm i parcel and npm install parcel are same thing.

npm install --save-dev parcel and npm install -D parcel are the same thing.

ignite your parcel app:
npx parcel entryfile
npx parcel index.html

//to execute a script from scripts section in package.json
npm run build

31st Dec 2022

what is JSX?
it is an extension to javascript. It allows us to write HTML in javascript and place them in DOM without use of any javascript functions like 
append or create element.

Superpowers of JSX?
1. write HTML in javascript
2. we can pass jsx into javascript variables
3. JSX supports all javascript expressions and loops.
4. we can use JSX element attributes as props in the child components.

Role of type attribute in script tag. what options can we use.
type attribute in script tag is to tell browser or js engine that what kind of javascript code is present in that file.
1. we can type="module" to tell js engine that the js file being imported is a module and not plan javascript.
2. "importmap" is another option which basically tells how to resolve the different ES javascript modules into the HTML.
example if there is a module name event then it should resolve to "path/src/event.js"

{TitleComponent} vs {<TitleComponent />} vs {<TitleComponent></TitleComponent>} in JSX?
{<TitleComponent />} is the correct way to call a child component in JSX.


6th Jan 2023

Is JSX mandatory for React? No.

Is ES6 mandatory for React? No.

How can I write comments in JSX?
{/* This is a JSX comment */} 

What is <React.Fragment></React.Fragment> and <></> ?
React fragments are used to have a container or wrapper element on JSX elements without actually having to render a div or html tag in DOM.
These behave as empty tags. Means they don't render anything in actual DOM. That is why they can also be represented as <></>

What is Virtual DOM?
Virtual DOM is not the actual DOM instead it is a representation of the actual DOM.

What is Reconciliation in React?
Reconciliation is a concept by which React uses a diff algorithm to find differences between actual DOM and the virtual DOM.

What is React Fiber?
React Fiber is the new version of Reconciliation engine introduced in react 16.

Why do we need keys in React? when do we need keys in React?
Keys are required to make each element uniquely identifiable by react. 
Keys are mandatory to be present whenever there is looping of elements under a parent element.
If keys are not provided then react will re-render the whole parent in case of any changes in child elements.
WIth keys properly defined, react will re-render only specific child element which is added/updated.


Can we use index as keys?
Ideally keys should be unique identifiers. We should not use index as keys but in worst case atleast use index as keys if we don't have anything else 
that can be unique.

What is props in React?
props in react components are basically parameters of the function.

WHat is config driven UI?
config driven UI is a method by which the frontend UI of a web page is rendered differently based on different configurations defined in the 
backend or from API. example. a food application may have an offers section which may or may not be displayed to users based on certain 
conditions like their location.

7 Jan 2023

Difference between Named export, Default export, * as export.
Named export: 
export const Variable1 = () => {};
import {Variable1} from '';

Default export:
const Variable1 = () => {};
export default Variable1;
import Variable1 from '';

* as export:
import * as Obj from '';
Obj.Variable1();

Importance of config.js?
config.js is an important file in the project where you should keep the API baseurl or endpoint so that it can be managed from one file. Similarly, 
other key settings or urls or keys can be kept in this config.js file.

React Hooks?
React Hooks are simple JavaScript functions that we can use to isolate the reusable part from a functional component.

Why do we need useState hook?
The useState Hook can be used to keep track of strings, numbers, booleans, arrays, objects, and any combination of these! We could create 
multiple state Hooks to track individual values.


Chapter-06 - Exploring the world

What is a Microservice?

What is Monolith architecture?

What is the difference between Monolith and Microservice?

Why do we need a useEffect Hook?

What is Optional Chaining?

What is Shimmer UI?

What is the difference between JS expression and JS statement?

What is conditional rendering, explain with a code example.

What is CORS?

what is async and await?

What is the use of `const json = await data.json();` in getRastaurants()



Chapter - 07 - Finding the path

What are various waus to add images into our App? Explain with code examples.

What would happen if we do console.log(useState())?

How will useEffect behave if we don't add a dependency array?

What is SPA?

What is difference between Client Side Routing and Server Side Routing?


Chapter - 08 - Let's get Classy

How do you create Nested Routes in react-router-dom configuration?

Read about createHashRouter, createMemoryRouter from React Router docs.

What is the order of life cycle method calls in Class Based Components.

Why do we use componentDidMount?

Why do we use componentWillUnmount? Show with example.

(Research) Why do we use super(props) in constructor?

(Research) Why can't we have the callback function of useEffect async?



Chapter - 09 - Optimizing our App

When and why do we need lazy()?

What is suspense?

Why we got this error: A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading
indicator. To fix, update that suspend should be wrapped with startTransition? How does suspense fix this error?

Advantages and disadvantages of using this code splitting pattern?

When do we and why do we need suspense?



Chapter - 10 - Jo dikhta he vo bikta he

Explore all the ways of writing css and list them.

How do we configure tailwind?

In tailwind.config.js, what does all the keys mean (content, theme, extend, plugins)?

Why do we have .postcssrc file?




Chapter - 11 - Data is the new Oil.


